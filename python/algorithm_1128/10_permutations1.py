# 순열 개수 리턴하기

# 서로 다른 정수 배열을 입력받아서 가능한 모든 순열을 리턴한다.
def permutation(nums: list[int]) -> list[list[int]]:
    results = []
    add_result = []
    def dfs(nums):
        if len(nums) == 0:
            results.append(add_result[:]) # 중요
            return
        for i in nums:
            add_result.append(i)
            print(add_result)
            new_nums = nums[:]
            new_nums.remove(i)
            print(new_nums)
            dfs(new_nums)
            add_result.pop() # 중요
            print(add_result)
    dfs(nums)
    return results

data = [1, 2, 3]
print(permutation(data))


    # 먼저 배열 [1, 2, 3] 반복
    # 1. [1]
        #   추가될 배열에 [1] 만들기
        #   [1, 2, 3] 복제해서 [1] 제거 -> [2, 3]
        #   그 다음으로 배열 [2, 3] 반복
        #   1. [2]
                #   추가될 배열에 [1, 2] 만들기
                #   [2, 3] 복제해서 [2] 제거 -> [3]
                #   그 다음으로 배열 [3] 반복
                #   1. [3]
                    #   추가될 배열에 [1, 2, 3] 만들기
                    #   [3] 복제해서 [3] 제거 -> []
                    #   그 다음으로 배열 [] 반복
                    ############# 데이터배열이 비어있다면, 추가될 배열 [1, 2, 3]~~~
                    # 마지막에 넣은 [3]을 제거
        # 마지막에 넣은 [2]을 제거
        #   2. [3]
                #   추가될 배열에 [1, 3] 만들기
                #   [2, 3] 복제해서 [3] 제거 -> [2]
                #   그 다음으로 배열 [2] 반복
                #   1. [2]
                    #   추가될 배열에 [1, 3, 2] 만들기
                    #   [2] 복제해서 [2] 제거 -> []
                    #   그 다음으로 배열 [] 반복
                    ############# 데이터배열이 비어있다면, 추가될 배열 [1, 3, 2]~~~
                    # 마지막에 넣은 [2]을 제거
        # 마지막에 넣은 [3]을 제거
    # 마지막에 넣은 [1]을 제거
    # 2. [2]
        #   추가될 배열에 [2] 만들기
        #   [1, 2, 3] 복제해서 [2] 제거 -> [1, 3]
        #   그 다음으로 배열 [1, 3] 반복
        #   1. [1]
                #   추가될 배열에 [2, 1] 만들기
                #   [1, 3] 복제해서 [1] 제거 -> [3]
                #   그 다음으로 배열 [3] 반복
                #   1. [3]
                    #   추가될 배열에 [2, 1, 3] 만들기
                    #   [3] 복제해서 [3] 제거 -> []
                    #   그 다음으로 배열 [] 반복
                    ############# 데이터배열이 비어있다면, 추가될 배열 [2, 1, 3]~~~
                    # 마지막에 넣은 [3]을 제거
        # 마지막에 넣은 [1]을 제거
        #   2. [3]
                #   추가될 배열에 [2, 3] 만들기
                #   [1, 3] 복제해서 [3] 제거 -> [1]
                #   그 다음으로 배열 [1] 반복
                #   1. [1]
                    #   추가될 배열에 [2, 3, 1] 만들기
                    #   [1] 복제해서 [1] 제거 -> []
                    #   그 다음으로 배열 [] 반복
                    ############# 데이터배열이 비어있다면, 추가될 배열 [2, 3, 1]~~~
                    # 마지막에 넣은 [1]을 제거
        # 마지막에 넣은 [3]을 제거
    # 마지막에 넣은 [2]을 제거
    # 3. [3]
        #   추가될 배열에 [3] 만들기
        #   [1, 2, 3] 복제해서 [3] 제거 -> [1, 2]
        #   그 다음으로 배열 [1, 2] 반복
        #   1. [1]
                #   추가될 배열에 [3, 1] 만들기
                #   [1, 2] 복제해서 [1] 제거 -> [2]
                #   그 다음으로 배열 [2] 반복
                #   1. [2]
                    #   추가될 배열에 [3, 1, 2] 만들기
                    #   [2] 복제해서 [2] 제거 -> []
                    #   그 다음으로 배열 [] 반복
                    ############# 데이터배열이 비어있다면, 추가될 배열 [3, 1, 2]~~~
                    # 마지막에 넣은 [2]을 제거
        # 마지막에 넣은 [1]을 제거
        #   2. [2]
                #   추가될 배열에 [3, 2] 만들기
                #   [1, 2] 복제해서 [2] 제거 -> [1]
                #   그 다음으로 배열 [1] 반복
                #   1. [1]
                    #   추가될 배열에 [3, 2, 1] 만들기
                    #   [1] 복제해서 [1] 제거 -> []
                    #   그 다음으로 배열 [] 반복
                    ############# 데이터배열이 비어있다면, 추가될 배열 [3, 2, 1]~~~
                    # 마지막에 넣은 [1]을 제거
        # 마지막에 넣은 [2]을 제거
    # 마지막에 넣은 [3]을 제거